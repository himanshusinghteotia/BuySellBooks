{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addlist.service.ts","webpack:///./src/app/addlist/addlist.component.css","webpack:///./src/app/addlist/addlist.component.html","webpack:///./src/app/addlist/addlist.component.ts","webpack:///./src/app/adduser.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/checkuser.service.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/getlist.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/listings/listings.component.css","webpack:///./src/app/listings/listings.component.html","webpack:///./src/app/listings/listings.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/searchfilter.pipe.ts","webpack:///./src/app/showmsg/showmsg.component.css","webpack:///./src/app/showmsg/showmsg.component.html","webpack:///./src/app/showmsg/showmsg.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/singlelist/singlelist.component.css","webpack:///./src/app/singlelist/singlelist.component.html","webpack:///./src/app/singlelist/singlelist.component.ts","webpack:///./src/app/wishlist.service.ts","webpack:///./src/app/wishlist/wishlist.component.css","webpack:///./src/app/wishlist/wishlist.component.html","webpack:///./src/app/wishlist/wishlist.component.ts","webpack:///./src/app/wishshow.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { List } from './list'\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'content-Type': 'application/json' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddlistService {\n  constructor(private http: HttpClient) { }\n\n  /*\n    function to add book details to the backend through httpclient\n  */\n  addlist(list: List): Observable<List> {\n    return this.http.post<List>('/addlist', list, httpOptions)\n  }\n}","module.exports = \".form-signin {\\r\\n  width: 100%;\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\"","module.exports = \"<form class=\\\"form-signin text-center\\\" #frm=\\\"ngForm\\\" (ngSubmit)=\\\"addList(frm)\\\">\\n  <img class=\\\"mb-4\\\" src=\\\"http://icons.iconarchive.com/icons/double-j-design/ravenna-3d/128/Book-icon.png\\\" alt=\\\"\\\" width=\\\"72\\\"\\n    height=\\\"72\\\">\\n  <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Add Your Book</h1>\\n  <div>\\n    <input class=\\\"form-control\\\" ngModel name=\\\"bkname\\\" type=\\\"text\\\" placeholder=\\\"Book Name\\\">\\n    <input class=\\\"form-control\\\" ngModel name=\\\"autname\\\" type=\\\"text\\\" placeholder=\\\"Author Name\\\">\\n    <form>\\n      <input class=\\\"form-control\\\" type=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\">\\n      <button style=\\\"color: blue\\\" class=\\\"form-control\\\" (click)=\\\"onUpload()\\\">Upload!(CLICK ME)</button>\\n    </form>\\n    <input class=\\\"form-control\\\" ngModel name=\\\"price\\\" type=\\\"number\\\" placeholder=\\\"Price\\\">\\n    <label style=\\\"margin-top: 15px;\\\">Book Condition</label>\\n    <select class=\\\"form-control\\\" ngModel name=\\\"bcond\\\">\\n      <option disabled selected>--select--</option>\\n      <option value=\\\"New\\\">New</option>\\n      <option value=\\\"Almost New\\\">Almost New</option>\\n      <option value=\\\"Slight Damage\\\">Slight Damage</option>\\n      <option value=\\\"Worn\\\">Worn</option>\\n    </select>\\n    <br>\\n    <input class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" value=\\\"Add to the List\\\">\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { List } from '../list';\nimport { AddlistService } from '../addlist.service'\nimport { HttpClient } from '@angular/common/http';\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-addlist',\n  templateUrl: './addlist.component.html',\n  styleUrls: ['./addlist.component.css']\n})\nexport class AddlistComponent implements OnInit {\n\n  public imagename: string;\n  public selectedFile: File;\n\n  constructor(private addlistservice: AddlistService, private http: HttpClient) { }\n\n  /*\n    function to add the entered details of the books in the database \n   */\n  addList(frm) {\n    let obj = JSON.parse(localStorage.getItem(\"user\"));\n    if(frm.value.cond==\"--select--\")\n    {\n      swal(\"Error!\",\"Need to fill all the fields.\", \"error\")\n    }\n    else\n    {\n      let list: List = {\n        bkname: frm.value.bkname,\n        autname: frm.value.autname,\n        imgname: this.imagename,\n        price: frm.value.price,\n        cond: frm.value.bcond,\n        userSid: parseInt(obj.sid)\n      }\n      //service to add book details\n      this.addlistservice.addlist(list).subscribe((success) => {\n        swal({\n          title: \"Book Added For Sale.\",\n          icon: \"success\"\n        })\n      }, error => {\n        swal(\"Error!\", error.error, \"error\")\n      })\n    }\n  }\n\n  /*\n    function to check to file upload change\n   */\n  onFileChanged(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  /*\n    function to upload the file to the disk storage using multer at backend\n  */\n  onUpload() {\n    const uploadData = new FormData();\n    uploadData.append('image', this.selectedFile, this.selectedFile.name);\n    this.http.post('/upload', uploadData).subscribe(event => {\n      this.imagename = event.toString();\n      if (this.imagename != null) {\n        swal({\n          title: \"Image Uploaded.\",\n          icon: \"success\"\n        })\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdduserService {\n  constructor(private http: HttpClient) { }\n\n  /*\n    function to register user by add their entered details in the backend\n  */\n  adduser(user: User): Observable<any> {\n    return this.http.post<User>('/register', user, httpOptions)\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AdduserService } from './adduser.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { CheckuserService } from './checkuser.service';\nimport { AddlistComponent } from './addlist/addlist.component';\nimport { ListingsComponent } from './listings/listings.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { SinglelistComponent } from './singlelist/singlelist.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShowmsgComponent } from './showmsg/showmsg.component';\nimport { WishlistComponent } from './wishlist/wishlist.component';\nimport { SearchbookPipe, SearchauthorPipe, FilterbyPrice, FilterbyCondition } from './searchfilter.pipe';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n//Routing Array\nconst appRoutes: Routes = [\n  { path: \"\", component: LoginComponent },\n  { path: \"signup\", component: SignupComponent },\n  { path: \"listings\", component: ListingsComponent },\n  { path: \"listings/add\", component: AddlistComponent },\n  { path: \"listings/:id\", component: SinglelistComponent },\n  { path: \"wishlist\", component: WishlistComponent },\n  { path: \"messages\", component: ShowmsgComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    AddlistComponent,\n    ListingsComponent,\n    HeaderComponent,\n    FooterComponent,\n    SinglelistComponent,\n    ShowmsgComponent,\n    WishlistComponent,\n    SearchbookPipe,\n    SearchauthorPipe,\n    FilterbyPrice,\n    FilterbyCondition\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [AdduserService, CheckuserService,{provide:LocationStrategy,useClass:HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckuserService {\n  constructor(private http: HttpClient) { }\n  \n  /*\n    check the user entered details to the save registered details the user(login)\n  */\n  checkuser(user: User): Observable<any> {\n    return this.http.post<User>('/login', user, httpOptions)\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse \\\">\\n  <div class=\\\"container-fluid\\\">\\n    <p style=\\\"color:white;margin-top: 15px; text-align: center\\\">Made by Himanshu Singh Teotia &copy;2018</p>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {\n  }\n}","import { Injectable } from '@angular/core';\nimport{HttpClient,HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport{List} from'./list'\n\nconst httpOptions={\n  headers: new HttpHeaders({'content-Type':'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetlistService {\n  constructor(private http:HttpClient) { }\n\n  /*\n    used to get all the items from the backend to display at one page\n  */\n  getItem():Observable<List[]>{\n    return this.http.get<List[]>('/listing')\n  }\n\n  /*\n    used to get details of single selected items from the backend to display as single item\n  */\n  getsingleItem(id):Observable<List[]>{\n  return this.http.post<List[]>('/getsingle',{id},httpOptions)\n  }\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\">BootCamp 2018</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a routerLink=\\\"\\\">Home</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <div class=\\\"nav navbar-nav\\\" [hidden]=\\\"hidecheck()\\\">\\n          <li>\\n            <a routerLink=\\\"messages\\\">\\n              <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i> Messages</a>\\n          </li>\\n        </div>\\n        <div class=\\\"nav navbar-nav\\\" [hidden]=\\\"hidecheck()\\\">\\n          <li>\\n            <a routerLink=\\\"wishlist\\\">\\n              <i class=\\\"fa fa-heart\\\" aria-hidden=\\\"true\\\"></i> Wishlist</a>\\n          </li>\\n        </div>\\n        <div class=\\\"nav navbar-nav\\\" [hidden]=\\\"hidecheck()\\\">\\n          <li (click)=\\\"logout()\\\">\\n            <a routerLink=\\\"\\\">\\n              <span class=\\\"glyphicon\\\">&#xe163;</span>Logout</a>\\n          </li>\\n        </div>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n  public login;\n  public message: string;\n\n  constructor(private route: Router) { }\n\n  /*\n    function to remove the logged in user from the local storage\n  */\n  logout() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('flag');\n    this.login = false;\n    this.route.navigate(['']);\n  }\n\n  /*\n    function to hide and show the various links in navigation bar according to the login status\n  */\n  hidecheck() {\n    if (localStorage.getItem('flag') == \"logged\")\n      return false;\n    else if (localStorage.getItem('flag') == null)\n      return true;\n  }\n\n  ngOnInit() {\n    this.hidecheck();\n  }\n}","module.exports = \"#image{\\r\\n    width: auto;\\r\\n    height: 150px;\\r\\n    margin: 0 auto 1em auto;\\r\\n}\"","module.exports = \"<div class=\\\"form-inline\\\">\\n\\t<div class=\\\"text-center\\\">\\n\\t\\t<Label>Filters&nbsp;&nbsp;</Label>\\n\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText1\\\" name=\\\"searchText1\\\" placeholder=\\\"Search By BookName\\\">&nbsp;&nbsp;\\n\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchText2\\\" name=\\\"searchText2\\\" placeholder=\\\"Search By AuthorName\\\">&nbsp;&nbsp;\\n\\t\\t<input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"searchText3\\\" name=\\\"searchText3\\\" placeholder=\\\"Filter by Price(Enter Max)\\\">&nbsp;&nbsp;\\n\\t\\t<label style=\\\"margin: auto\\\">Select Condition:</label>\\n\\t\\t<select class=\\\"form-control\\\" [(ngModel)]=\\\"cnd\\\">&nbsp;&nbsp;\\n\\t\\t\\t<option disabled>--select--</option>\\n\\t\\t\\t<option value=\\\"All\\\">All</option>\\n\\t\\t\\t<option value=\\\"New\\\">New</option>\\n\\t\\t\\t<option value=\\\"Almost New\\\">Almost New</option>\\n\\t\\t\\t<option value=\\\"Slight Damage\\\">Slight Damage</option>\\n\\t\\t\\t<option value=\\\"Worn\\\">Worn</option>\\n\\t\\t</select>\\n\\t</div>\\n\\t<div class=\\\"text-right\\\" style=\\\"margin: 20px;\\\">\\n\\t\\t<button class=\\\"btn btn-primary\\\" routerLink=\\\"add\\\">ADD YOUR BOOKS FOR SALE</button>\\n\\t</div>\\n</div>\\n<div class=\\\"container text-center\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-5 col-sm-5\\\" *ngFor=\\\"let i of (item | searchbook: searchText1 | searchauthor: searchText2 | filterbyprice: searchText3 | filterbycondition: cnd )\\\">\\n\\t\\t\\t<div style=\\\"cursor:pointer; \\\" (click)=\\\"p_detail(i.lid)\\\">\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<img id=\\\"image\\\" src={{i.imgname}} onerror=\\\"this.src='/uploads/default.jpeg'\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<span class=\\\"text-uppercase font-weight-bold\\\" style=\\\"font-family: 'Times New Roman', Times, serif; font-size: 25px;\\\">{{i.bkname}}</span>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t<span class=\\\"text-capitalize\\\" style=\\\"font-family: 'Times New Roman',Times, serif;font-size: 15px;\\\">Author: {{i.autname}}</span>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t<span style=\\\"font-family: 'Times New Roman', Times, serif; font-size: 25px; ;color: blue;\\\">₹ {{i.price}}</span>\\n\\t\\t\\t\\t\\t<p style=\\\"font-style: italic;\\\">Condition of book is\\n\\t\\t\\t\\t\\t\\t<b>{{i.cond}}</b>.</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: 30px;\\\" [id]=\\\"i.lid\\\" (click)=\\\"addwish($event,i.userSid)\\\">Add to WishList</button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { List } from '../list';\nimport { Wishlist } from '../wish';\nimport { GetlistService } from '../getlist.service';\nimport { WishlistService } from '../wishlist.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-listings',\n  templateUrl: './listings.component.html',\n  styleUrls: ['./listings.component.css']\n})\nexport class ListingsComponent implements OnInit {\n\n  public item: List[];\n  flag: string;\n  searchText1 = '';\n  searchText2 = '';\n  searchText3 = '';\n  cnd = '--select--';\n\n  constructor(private getlistservice: GetlistService, private wishlistservice: WishlistService, private route: Router) { }\n\n  /*\n    function to add books in the wishlist\n  */\n  addwish(event: MouseEvent, sid) {\n    let obj = JSON.parse(localStorage.getItem(\"user\"));\n    //checks if the book user want to add in wishlist is his own book uploaded by him to sell\n    //As in our website every user got a sellerid so he may act as seller or customer\n    if (sid == obj.sid) {\n      swal(\"This is your own product.\", \"\", \"error\")\n    }\n    else {\n      let wish: Wishlist = {\n        sid: parseInt(obj.sid),\n        lid: parseInt(event.srcElement.id)\n      }\n      this.wishlistservice.addwishList(wish).subscribe((success) => {\n        swal({\n          title: \"Wish has been made.\",\n          icon: \"success\"\n        });\n      }, error => {\n        swal(\"Error!\", error.error, \"error\")\n      })\n    }\n  }\n\n  /*\n    function to route the page to the single view page of clicked item with it id in url\n  */\n  p_detail(lid) {\n    this.route.navigate(['/listings/' + lid]);\n  }\n\n  /*\n    function to check if the user is the logged in or not\n    and navigate to login page if not \n  */\n  private getflag() {\n    this.flag = localStorage.getItem('flag');\n    if (this.flag != \"logged\") {\n      this.route.navigate(['']);\n    }\n  }\n  \n  /*\n    function to get all the books entered by seller\n  */\n  getitems() {\n    this.getlistservice.getItem().subscribe(items => {\n      this.item = items;\n    })\n  }\n\n  ngOnInit() {\n    this.getitems();\n    this.getflag();\n  }\n}","module.exports = \".form-signin {\\r\\n  width: 100%;\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\"","module.exports = \"<form class=\\\"form-signin text-center\\\" #frm=\\\"ngForm\\\" (ngSubmit)=\\\"checkUser(frm)\\\">\\n  <img class=\\\"mb-4\\\" src=\\\"http://icons.iconarchive.com/icons/double-j-design/ravenna-3d/128/Book-icon.png\\\" alt=\\\"\\\" width=\\\"72\\\"\\n    height=\\\"72\\\">\\n  <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Sign In</h1>\\n  <div>\\n    <input ngModel id=\\\"inputEmail\\\" name=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required autofocus>\\n    <input ngModel name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n    <input class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n    <br>\\n    <br>\\n    <p>Not registered?</p>\\n    <a routerLink=\\\"signup\\\">Create account</a>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { CheckuserService } from '../checkuser.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public flag: string;\n\n  constructor(private checkuserservice: CheckuserService, private route: Router) { }\n\n  /*\n    function to check if the user is registered or not.\n  */\n  checkUser(frm) {\n    let user: User = {\n      email: frm.value.email,\n      password: frm.value.password\n    }\n    this.checkuserservice.checkuser(user).subscribe((success: any) => {\n      localStorage.setItem(\"user\", JSON.stringify(success));\n      localStorage.setItem(\"flag\", \"logged\");\n      this.route.navigate(['/listings']);\n    }, error => {\n      swal(\"Error!\", error.error,\"error\")\n    })\n  }\n  /*\n    fucntion to check if the user is logged in or not\n    if logged in then route it to main home page\n  */\n  private getflag() {\n    this.flag = localStorage.getItem('flag');\n    if (this.flag == \"logged\") {\n      this.route.navigate(['listings']);\n    }\n  }\n\n  ngOnInit() {\n    this.getflag();\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { Message } from './message'\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'content-Type': 'application/json' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  constructor(private http: HttpClient) { }\n\n  /*\n    used to send message to the backend messages table using httpclient \n  */\n  sendmessage(message: Message): Observable<Message> {\n    return this.http.post<Message>('/sendmsg', message, httpOptions)\n\n  }\n\n  /*\n    used to get all the message from backend of the logged in user using httpclient\n  */\n  loadmessage(id: number): Observable<Message[]> {\n    return this.http.post<Message[]>('/loadmsg', { id }, httpOptions)\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { List } from './list';\n\n@Pipe({\n  name: 'searchfilter'\n})\nexport class SearchfilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return null;\n  }\n}\n\n//FILTER APPLIED ON BOOK LIST TO SEARCH BOOKS ACCORDING TO THEIR NAME\n@Pipe({\n  name: 'searchbook'\n})\nexport class SearchbookPipe implements PipeTransform {\n  transform(item: List[], searchText: string): any {\n    if (!item) return [];\n    if (!searchText) return item;\n    searchText = searchText.toLowerCase();\n    return item.filter(it => {\n      return it.bkname.toLowerCase().includes(searchText);\n    });\n  }\n}\n\n//FILTER APPLIED ON BOOK LIST TO SEARCH BOOKS ACCORDING TO THEIR AUTHOR NAME\n@Pipe({\n  name: 'searchauthor'\n})\nexport class SearchauthorPipe implements PipeTransform {\n  transform(item: List[], searchText: string): any {\n    if (!item) return [];\n    if (!searchText) return item;\n    searchText = searchText.toLowerCase();\n    return item.filter(it => {\n      return it.autname.toLowerCase().includes(searchText);\n    });\n  }\n}\n\n//FILTER APPLIED ON BOOK LIST TO SEARCH BOOKS ACCORDING TO THEIR PRICE\n@Pipe({\n  name: 'filterbyprice'\n})\nexport class FilterbyPrice implements PipeTransform {\n  transform(item: List[], searchText: number): any {\n    if (!item) return [];\n    if (!searchText) return item;\n    return item.filter(it => {\n      return it.price <= searchText;\n    });\n  }\n}\n\n//FILTER APPLIED ON BOOK LIST TO SEARCH BOOKS ACCORDING TO THEIR CONDITION(STATE)\n@Pipe({\n  name: 'filterbycondition'\n})\nexport class FilterbyCondition implements PipeTransform {\n  transform(item: List[], searchText: string): any {\n    if (!item) return [];\n    if (searchText == '--select--' || searchText == 'All') return item;\n    console.log(item)\n    return item.filter(it => {\n      console.log(it.cond)\n      return it.cond==searchText;\n    });\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"alert alert-info\\\" *ngIf=\\\"nomsg; else elseBlock\\\">\\n  No message</div>\\n<ng-template #elseBlock>\\n  <div class=\\\"alert alert-info\\\" *ngFor=\\\"let m of message\\\">\\n    <li class=\\\"text-center\\\" style=\\\"list-style-type:none;\\\">{{m.msg}}</li>\\n  </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../message';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-showmsg',\n  templateUrl: './showmsg.component.html',\n  styleUrls: ['./showmsg.component.css']\n})\nexport class ShowmsgComponent implements OnInit {\n  public nomsg;\n  public message: Message[];\n\n  constructor(private messageservice: MessageService) { }\n\n  /*\n    function to display all the received message of the logged in user\n  */\n  loadmsg() {\n    let obj = JSON.parse(localStorage.getItem(\"user\"));\n    this.messageservice.loadmessage(obj.sid).subscribe(messages => {\n      this.message = messages;\n      //checks if there are messages in the inbox or not\n      if (this.message.length == 0) {\n        this.nomsg = true;\n        swal(\"\", \"You have not received any message.\", \"error\")\n      }\n      else {\n        this.nomsg = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.loadmsg();\n  }\n}","module.exports = \".form-signin {\\r\\n  width: 100%;\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: auto;\\r\\n}\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  box-sizing: border-box;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\"","module.exports = \"<form class=\\\"form-signin text-center\\\" #frm=\\\"ngForm\\\" (ngSubmit)=\\\"addUser(frm)\\\">\\n    <img class=\\\"mb-4\\\" src=\\\"http://icons.iconarchive.com/icons/double-j-design/ravenna-3d/128/Book-icon.png\\\" alt=\\\"\\\" width=\\\"72\\\"\\n        height=\\\"72\\\">\\n    <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Sign Up</h1>\\n    <div>\\n        <input class=\\\"form-control\\\" ngModel name=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\" required>\\n        <input class=\\\"form-control\\\" ngModel name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email address\\\" required>\\n        <input class=\\\"form-control\\\" ngModel name=\\\"college\\\" type=\\\"text\\\" placeholder=\\\"College Name\\\" required>\\n        <input class=\\\"form-control\\\" ngModel name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"Address\\\" required>\\n        <input class=\\\"form-control\\\" ngModel name=\\\"phone\\\" type=\\\"number\\\" placeholder=\\\"Phone Number\\\" required>\\n        <input class=\\\"form-control\\\" ngModel ngModel name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n        <br>\\n        <input class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" value=\\\"Sign Up\\\">\\n        <br>\\n        <br>\\n        <p>Already registered?</p>\\n        <a routerLink=\\\"\\\">Login</a>\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { AdduserService } from '../adduser.service';\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private adduserservice: AdduserService) { }\n  \n  /*\n    Function to register user, various validation applied in backend so displays error messages accordingly\n  */\n  addUser(frm) {\n    let user: User = {\n      name: frm.value.name,\n      email: frm.value.email,\n      college: frm.value.college,\n      address: frm.value.address,\n      phone: frm.value.phone,\n      password: frm.value.password\n    }\n    this.adduserservice.adduser(user).subscribe((success) => {\n      swal(\"Registered\",\"welcome\",\"success\");\n    }, error => {\n      swal(\"Error!\", error.error, \"error\")\n    })\n  }\n  \n  ngOnInit() {\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"text-center\\\">\\n  <div>\\n    <img src={{item?.imgname}} onerror=\\\"this.src='/uploads/default.jpeg'\\\" class=\\\"product-grid__img\\\"\\n    />\\n  </div>\\n  <div>\\n    <span class=\\\"text-uppercase font-weight-bold\\\" style=\\\"font-family: 'Times New Roman', Times, serif; font-size: 25px;\\\">{{item?.bkname}}</span>\\n    <br>\\n    <span class=\\\"text-capitalize\\\" style=\\\"font-family: 'Times New Roman',Times, serif;font-size: 15px;\\\">Author: {{item?.autname}}</span>\\n    <br>\\n    <span style=\\\"font-family: 'Times New Roman', Times, serif; font-size: 25px; ;color: blue;\\\">₹ {{item?.price}}</span>\\n    <p style=\\\"font-style: italic;\\\">Condition of book is\\n      <b>{{item?.cond}}</b>.</p>\\n  </div>\\n  <button class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: 30px;margin-left: 10px;margin-right: 10px;\\\" [id]=\\\"item?.lid\\\" (click)=\\\"addwish($event,item?.userSid)\\\">Add to WishList</button>\\n  <button class=\\\"btn btn-primary\\\" [id]=\\\"item?.lid\\\" (click)=\\\"sendmsg(item?.userSid,item?.bkname,item?.lid)\\\" style=\\\"margin-bottom: 30px;margin-right: 10px;margin-left: 10px;\\\">Connect to Seller</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { List } from '../list';\nimport { GetlistService } from '../getlist.service';\nimport { WishlistService } from '../wishlist.service';\nimport { Wishlist } from '../wish';\nimport { Message } from '../message';\nimport { MessageService } from '../message.service'\n\n@Component({\n  selector: 'app-singlelist',\n  templateUrl: './singlelist.component.html',\n  styleUrls: ['./singlelist.component.css']\n})\nexport class SinglelistComponent implements OnInit {\n  item_id: Number;\n  public item: List[];\n\n  constructor(private route: ActivatedRoute, private getlistservice: GetlistService, private wishlistservice: WishlistService, private messageservice: MessageService) {\n    this.item_id = parseInt(this.route.snapshot.params.id);\n  }\n\n  /*\n    Function to get details of the items wanted to be viewed as single on the page\n  */\n  getsingleitems() {\n    this.getlistservice.getsingleItem(this.item_id).subscribe(items => {\n      this.item = items\n    });\n  }\n\n  /*\n    function to add books in the wishlist\n  */\n  addwish(event: MouseEvent, sid) {\n    let obj = JSON.parse(localStorage.getItem(\"user\"));\n    //checks if the book user want to add in wishlist is his own book uploaded by him to sell\n    //As in our website every user got a sellerid so he may act as seller or customer\n    if (sid == obj.sid) {\n      swal(\"This is your own product.\", \"\", \"error\")\n    }\n    else {\n      let wish: Wishlist = {\n        sid: parseInt(obj.sid),\n        lid: parseInt(event.srcElement.id)\n      }\n      this.wishlistservice.addwishList(wish).subscribe((success) => {\n        swal({\n          title: \"Wish has been made.\",\n          icon: \"success\"\n        });\n      }, error => {\n        swal(\"Error!\", error.error, \"error\")\n      })\n    }\n  }\n\n  /*\n    Function to send messages to the seller by sharing the contact details\n  */\n  sendmsg(sid, bkname, lid) {\n    let obj = JSON.parse(localStorage.getItem(\"user\"));\n    //checks if the seller is the logged in user or not and display error if he try to send message to himself\n    if (sid == obj.sid) {\n      swal(\"This is your own product.\", \"\", \"error\")\n    }\n    else {\n      let message: Message = {\n        msg: \"I am \" + obj.name + \" and interested to buy your product \" + bkname + \" with productid \" + lid + \". Kindly contact me at \" + obj.email + \" or call me on \" + obj.phone,\n        sid: sid\n      }\n      confirm(\"Sending your message as\" + \"\\\" \" + message.msg + \"\\\"\");\n      this.messageservice.sendmessage(message).subscribe((success) => {\n        swal({\n          title: \"Message send.\",\n          icon: \"success\"\n        });\n      }, error => {\n        swal(\"Error!\", error.error, \"error\")\n      })\n    }\n  }\n\n  ngOnInit() {\n    this.getsingleitems();\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { Wishlist } from './wish'\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'content-Type': 'application/json' })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n  constructor(private http: HttpClient) { }\n  \n  /*\n    used to add wishes to the wishlists table at backend with it user id and book id\n  */\n  addwishList(list: Wishlist): Observable<Wishlist> {\n    return this.http.post<Wishlist>('/addwish', list, httpOptions)\n  }\n}","module.exports = \"#image{\\r\\n    width: auto;\\r\\n    height: 150px;\\r\\n    margin: 0 auto 1em auto;\\r\\n}\"","module.exports = \"<div class=\\\"alert alert-info\\\" *ngIf=\\\"nowish; else elseBlock\\\">\\n  No Wishes\\n</div>\\n<ng-template #elseBlock>\\n  <div class=\\\"container text-center\\\">\\n    <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let w of wish\\\" class=\\\"col-md-6 col-sm-5\\\">\\n        <div style=\\\"cursor: pointer;\\\" (click)=\\\"p_detail(w.lid)\\\">\\n          <div>\\n            <img id=\\\"image\\\" src={{w.imgname}} onerror=\\\"this.src='/uploads/default.jpeg'\\\" class=\\\"product-grid__img\\\"\\n            />\\n          </div>\\n          <span class=\\\"text-uppercase font-weight-bold\\\" style=\\\"font-family: 'Times New Roman', Times, serif;font-size: 25px;\\\">{{w.bkname}}</span>\\n          <br>\\n          <span class=\\\"text-capitalize\\\" style=\\\"font-family: 'Times New Roman', Times, serif;font-size: 15px;\\\">author: {{w.autname}}</span>\\n          <br>\\n          <span style=\\\"font-family: 'Times New Roman', Times, serif;font-size: 25px;color: blue; \\\">₹{{w.price}}</span>\\n          <p style=\\\"font-style: italic;margin-bottom: 30px;\\\">Condition of book is\\n            <b>{{w.cond}}</b>.\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { WishshowService } from '../wishshow.service';\nimport { Wishlist } from '../wish';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-wishlist',\n  templateUrl: './wishlist.component.html',\n  styleUrls: ['./wishlist.component.css']\n})\nexport class WishlistComponent implements OnInit {\n  public nowish;\n  public wish: Wishlist[];\n  \n  constructor(private wishshowservice: WishshowService, private route: Router) { }\n\n   /*\n    function to route the page to the single view page of clicked item with it id in url\n  */\n  p_detail(lid) {\n    this.route.navigate(['/listings/' + lid]);\n  }\n  \n  /*\n    function to get the wishes made by the user on whislist page\n  */\n  loadwish() {\n    let obj = JSON.parse(localStorage.getItem(\"user\"));\n    this.wishshowservice.loadwsh(obj.sid).subscribe(wishes => {\n      this.wish = wishes\n      //checks if the user has made any request or not\n      if (this.wish.length == 0) {\n        this.nowish = true;\n        swal(\"\", \"You have not made any Wish.\", \"error\")\n      }\n      else {\n        this.nowish = false;\n      }\n    })\n  }\n  \n  ngOnInit() {\n    this.loadwish();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport{HttpClient,HttpHeaders} from '@angular/common/http'\nimport{Observable} from 'rxjs'\nimport { Wishlist } from './wish';\n\nconst httpOptions={\n  headers: new HttpHeaders({'content-Type':'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishshowService {\n  constructor(private http:HttpClient) { }\n  \n  /*\n    used to load the wishes made by the logged in user through it id\n  */\n  loadwsh(id:number):Observable<Wishlist[]>{\n    return this.http.post<Wishlist[]>('/getwish', {id}, httpOptions)\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}